// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fedor_msg.proto

#ifndef PROTOBUF_fedor_5fmsg_2eproto__INCLUDED
#define PROTOBUF_fedor_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace fedor {
class AnswerRequest;
class AnswerRequestDefaultTypeInternal;
extern AnswerRequestDefaultTypeInternal _AnswerRequest_default_instance_;
class SearhRequest;
class SearhRequestDefaultTypeInternal;
extern SearhRequestDefaultTypeInternal _SearhRequest_default_instance_;
}  // namespace fedor

namespace fedor {

namespace protobuf_fedor_5fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_fedor_5fmsg_2eproto

enum SearhRequest_TypePacket {
  SearhRequest_TypePacket_TEventStick = 0,
  SearhRequest_TypePacket_TEventFobj = 1
};
bool SearhRequest_TypePacket_IsValid(int value);
const SearhRequest_TypePacket SearhRequest_TypePacket_TypePacket_MIN = SearhRequest_TypePacket_TEventStick;
const SearhRequest_TypePacket SearhRequest_TypePacket_TypePacket_MAX = SearhRequest_TypePacket_TEventFobj;
const int SearhRequest_TypePacket_TypePacket_ARRAYSIZE = SearhRequest_TypePacket_TypePacket_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearhRequest_TypePacket_descriptor();
inline const ::std::string& SearhRequest_TypePacket_Name(SearhRequest_TypePacket value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearhRequest_TypePacket_descriptor(), value);
}
inline bool SearhRequest_TypePacket_Parse(
    const ::std::string& name, SearhRequest_TypePacket* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearhRequest_TypePacket>(
    SearhRequest_TypePacket_descriptor(), name, value);
}
// ===================================================================

class SearhRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fedor.SearhRequest) */ {
 public:
  SearhRequest();
  virtual ~SearhRequest();

  SearhRequest(const SearhRequest& from);

  inline SearhRequest& operator=(const SearhRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearhRequest& default_instance();

  static inline const SearhRequest* internal_default_instance() {
    return reinterpret_cast<const SearhRequest*>(
               &_SearhRequest_default_instance_);
  }

  void Swap(SearhRequest* other);

  // implements Message ----------------------------------------------

  inline SearhRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearhRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearhRequest& from);
  void MergeFrom(const SearhRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearhRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SearhRequest_TypePacket TypePacket;
  static const TypePacket TEventStick =
    SearhRequest_TypePacket_TEventStick;
  static const TypePacket TEventFobj =
    SearhRequest_TypePacket_TEventFobj;
  static inline bool TypePacket_IsValid(int value) {
    return SearhRequest_TypePacket_IsValid(value);
  }
  static const TypePacket TypePacket_MIN =
    SearhRequest_TypePacket_TypePacket_MIN;
  static const TypePacket TypePacket_MAX =
    SearhRequest_TypePacket_TypePacket_MAX;
  static const int TypePacket_ARRAYSIZE =
    SearhRequest_TypePacket_TypePacket_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TypePacket_descriptor() {
    return SearhRequest_TypePacket_descriptor();
  }
  static inline const ::std::string& TypePacket_Name(TypePacket value) {
    return SearhRequest_TypePacket_Name(value);
  }
  static inline bool TypePacket_Parse(const ::std::string& name,
      TypePacket* value) {
    return SearhRequest_TypePacket_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required .fedor.SearhRequest.TypePacket type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::fedor::SearhRequest_TypePacket type() const;
  void set_type(::fedor::SearhRequest_TypePacket value);

  // @@protoc_insertion_point(class_scope:fedor.SearhRequest)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  int type_;
  friend struct  protobuf_fedor_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnswerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fedor.AnswerRequest) */ {
 public:
  AnswerRequest();
  virtual ~AnswerRequest();

  AnswerRequest(const AnswerRequest& from);

  inline AnswerRequest& operator=(const AnswerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerRequest& default_instance();

  static inline const AnswerRequest* internal_default_instance() {
    return reinterpret_cast<const AnswerRequest*>(
               &_AnswerRequest_default_instance_);
  }

  void Swap(AnswerRequest* other);

  // implements Message ----------------------------------------------

  inline AnswerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AnswerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnswerRequest& from);
  void MergeFrom(const AnswerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnswerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fedor.AnswerRequest)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_id();
  void clear_has_id();
  void set_has_result();
  void clear_has_result();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 result_;
  friend struct  protobuf_fedor_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SearhRequest

// required string name = 1;
inline bool SearhRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearhRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearhRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearhRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SearhRequest::name() const {
  // @@protoc_insertion_point(field_get:fedor.SearhRequest.name)
  return name_.GetNoArena();
}
inline void SearhRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fedor.SearhRequest.name)
}
#if LANG_CXX11
inline void SearhRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fedor.SearhRequest.name)
}
#endif
inline void SearhRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fedor.SearhRequest.name)
}
inline void SearhRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fedor.SearhRequest.name)
}
inline ::std::string* SearhRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:fedor.SearhRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearhRequest::release_name() {
  // @@protoc_insertion_point(field_release:fedor.SearhRequest.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearhRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fedor.SearhRequest.name)
}

// required int32 id = 2;
inline bool SearhRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearhRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearhRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearhRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SearhRequest::id() const {
  // @@protoc_insertion_point(field_get:fedor.SearhRequest.id)
  return id_;
}
inline void SearhRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fedor.SearhRequest.id)
}

// required .fedor.SearhRequest.TypePacket type = 3;
inline bool SearhRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearhRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearhRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearhRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::fedor::SearhRequest_TypePacket SearhRequest::type() const {
  // @@protoc_insertion_point(field_get:fedor.SearhRequest.type)
  return static_cast< ::fedor::SearhRequest_TypePacket >(type_);
}
inline void SearhRequest::set_type(::fedor::SearhRequest_TypePacket value) {
  assert(::fedor::SearhRequest_TypePacket_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fedor.SearhRequest.type)
}

// -------------------------------------------------------------------

// AnswerRequest

// required string name = 1;
inline bool AnswerRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& AnswerRequest::name() const {
  // @@protoc_insertion_point(field_get:fedor.AnswerRequest.name)
  return name_.GetNoArena();
}
inline void AnswerRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fedor.AnswerRequest.name)
}
#if LANG_CXX11
inline void AnswerRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fedor.AnswerRequest.name)
}
#endif
inline void AnswerRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fedor.AnswerRequest.name)
}
inline void AnswerRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fedor.AnswerRequest.name)
}
inline ::std::string* AnswerRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:fedor.AnswerRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnswerRequest::release_name() {
  // @@protoc_insertion_point(field_release:fedor.AnswerRequest.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnswerRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fedor.AnswerRequest.name)
}

// required int32 id = 2;
inline bool AnswerRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AnswerRequest::id() const {
  // @@protoc_insertion_point(field_get:fedor.AnswerRequest.id)
  return id_;
}
inline void AnswerRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fedor.AnswerRequest.id)
}

// required int32 result = 3;
inline bool AnswerRequest::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnswerRequest::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnswerRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnswerRequest::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AnswerRequest::result() const {
  // @@protoc_insertion_point(field_get:fedor.AnswerRequest.result)
  return result_;
}
inline void AnswerRequest::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fedor.AnswerRequest.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace fedor

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fedor::SearhRequest_TypePacket> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fedor::SearhRequest_TypePacket>() {
  return ::fedor::SearhRequest_TypePacket_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fedor_5fmsg_2eproto__INCLUDED
